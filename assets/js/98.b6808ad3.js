(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{528:function(e,t,l){"use strict";l.r(t);var v=l(55),i=Object(v.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"topic"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#topic"}},[e._v("#")]),e._v(" Topic")]),e._v(" "),l("h2",{attrs:{id:"mvc"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[e._v("#")]),e._v(" MVC")]),e._v(" "),l("ul",[l("li",[e._v("View 负责渲染用户界面，应该避免在 View 中涉及业务逻辑")]),e._v(" "),l("li",[e._v("Controller 负责接收用户输入，根据用户输入调用 Model 逻辑，将产生的结果交给 View 部分，让 View 渲染出必要的输出")]),e._v(" "),l("li",[e._v("Model 负责管理数据，大部分业务逻辑也应该放在 Model")])]),e._v(" "),l("p",[l("strong",[e._v("缺点：")]),e._v(" 由于在实现的过程中，往往出现 View 与 Model 不经过 Controller 通信的现象，造成数据流混乱，难以维护和增加功能")]),e._v(" "),l("h2",{attrs:{id:"mvvm"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[e._v("#")]),e._v(" MVVM")]),e._v(" "),l("p",[e._v("组成部分 Model、View、ViewModel")]),e._v(" "),l("p",[e._v("建立了数据和视图之间的绑定，简化前端代码")]),e._v(" "),l("ul",[l("li",[e._v("View：UI 界面")]),e._v(" "),l("li",[e._v("ViewModel：它是 View 的抽象，负责 View 与 Model 之间信息转换，将 View 的 Command 传送到 Model；")]),e._v(" "),l("li",[e._v("Model：数据访问层")])]),e._v(" "),l("p",[e._v("？不适合 SEO？")])])}),[],!1,null,null,null);t.default=i.exports}}]);