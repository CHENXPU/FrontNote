(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{565:function(s,v,t){"use strict";t.r(v);var _=t(55),a=Object(_.a)({},(function(){var s=this,v=s.$createElement,t=s._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"浏览器安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全"}},[s._v("#")]),s._v(" 浏览器安全")]),s._v(" "),t("h2",{attrs:{id:"xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[s._v("#")]),s._v(" XSS")]),s._v(" "),t("p",[s._v("XSS (Cross-Site Scripting)，跨站脚本攻击，跨站脚本攻击是指通过存在安全漏洞的 Web 网站注册用户的浏览器内运行非法的 HTML 标签或 JavaScript 进行的一种攻击。")]),s._v(" "),t("p",[s._v("跨站脚本攻击有可能造成以下影响:")]),s._v(" "),t("ul",[t("li",[s._v("利用虚假输入表单骗取用户个人信息。")]),s._v(" "),t("li",[s._v("利用脚本窃取用户的 Cookie 值，被害者在不知情的情况下，帮助攻击者发送恶意请求。")]),s._v(" "),t("li",[s._v("显示伪造的文章或图片。")])]),s._v(" "),t("p",[t("strong",[s._v("XSS 的原理是恶意攻击者往 Web 页面里插入恶意可执行网页脚本代码，当用户浏览该页之时，嵌入其中 Web 里面的脚本代码会被执行，从而可以达到攻击者盗取用户信息或其他侵犯用户安全隐私的目的。")])]),s._v(" "),t("h3",{attrs:{id:"非持久型-xss（反射型-xss-）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非持久型-xss（反射型-xss-）"}},[s._v("#")]),s._v(" 非持久型 XSS（反射型 XSS ）")]),s._v(" "),t("p",[s._v("非持久型 XSS 漏洞，一般是通过给别人发送带有恶意脚本代码参数的 URL，当 URL 地址被打开时，特有的恶意代码参数被 HTML 解析、执行。")]),s._v(" "),t("p",[s._v("非持久型 XSS 漏洞攻击有以下几点特征：")]),s._v(" "),t("ul",[t("li",[s._v("即时性，不经过服务器存储，直接通过 HTTP 的 GET 和 POST 请求就能完成一次攻击，拿到用户隐私数据。")]),s._v(" "),t("li",[s._v("攻击者需要诱骗点击,必须要通过用户点击链接才能发起")]),s._v(" "),t("li",[s._v("反馈率低，所以较难发现和响应修复")]),s._v(" "),t("li",[s._v("盗取用户敏感保密信息")])]),s._v(" "),t("h3",{attrs:{id:"持久型-xss（存储型-xss）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#持久型-xss（存储型-xss）"}},[s._v("#")]),s._v(" 持久型 XSS（存储型 XSS）")]),s._v(" "),t("p",[s._v("持久型 XSS 漏洞，一般存在于 Form 表单提交等交互功能，如文章留言，提交文本信息等，黑客利用的 XSS 漏洞，将内容经正常功能提交进入数据库持久保存，当前端页面获得后端从数据库中读出的注入代码时，恰好将其渲染执行。")]),s._v(" "),t("p",[s._v("攻击成功需要同时满足以下几个条件：")]),s._v(" "),t("ul",[t("li",[s._v("POST 请求提交表单后端没做转义直接入库。")]),s._v(" "),t("li",[s._v("后端从数据库中取出数据没做转义直接输出给前端。")]),s._v(" "),t("li",[s._v("前端拿到后端数据没做转义直接渲染成 DOM。")])]),s._v(" "),t("p",[s._v("持久型 XSS 有以下几个特点：")]),s._v(" "),t("ul",[t("li",[s._v("持久性，植入在数据库中")]),s._v(" "),t("li",[s._v("盗取用户敏感私密信息")]),s._v(" "),t("li",[s._v("危害面广")])]),s._v(" "),t("h2",{attrs:{id:"csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[s._v("#")]),s._v(" CSRF")]),s._v(" "),t("p",[s._v("CSRF(Cross Site Request Forgery)，即跨站请求伪造，是一种常见的 Web 攻击，它利用用户已登录的身份，在用户毫不知情的情况下，以用户的名义完成非法操作。")]),s._v(" "),t("h3",{attrs:{id:"csrf-攻击的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf-攻击的原理"}},[s._v("#")]),s._v(" CSRF 攻击的原理")]),s._v(" "),t("p",[s._v("完成 CSRF 攻击必须要有三个条件：")]),s._v(" "),t("ul",[t("li",[s._v("用户已经登录了站点 A，并在本地记录了 cookie")]),s._v(" "),t("li",[s._v("在用户没有登出站点 A 的情况下（也就是 cookie 生效的情况下），访问了恶意攻击者提供的引诱危险站点 B (B 站点要求访问站点 A)。")]),s._v(" "),t("li",[s._v("站点 A 没有做任何 CSRF 防御")])]),s._v(" "),t("h3",{attrs:{id:"如何防御"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防御"}},[s._v("#")]),s._v(" 如何防御")]),s._v(" "),t("p",[s._v("防范 CSRF 攻击可以遵循以下几种规则：")]),s._v(" "),t("ul",[t("li",[s._v("Get 请求不对数据进行修改")]),s._v(" "),t("li",[s._v("不让第三方网站访问到用户 Cookie")]),s._v(" "),t("li",[s._v("阻止第三方网站请求接口")]),s._v(" "),t("li",[s._v("请求时附带验证信息，比如验证码或者 Token")])]),s._v(" "),t("p",[s._v("防御方法")]),s._v(" "),t("p",[s._v("SameSite: 可以对 Cookie 设置 SameSite 属性\nReferer Check: 通过检查 http 包头 referer 的值是不是这个页面，来判断是不是 CSRF 攻击\nAnti CSRF Token: 发送请求时在 HTTP 请求中以参数的形式加入一个随机产生的 token，这种方法相比 Referer 检查要安全很多\n验证码： 验证码够很好地遏制 CSRF 攻击。但增加验证码降低了用户的体验，网站不能给所有的操作都加上验证码")]),s._v(" "),t("h2",{attrs:{id:"点击劫持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持"}},[s._v("#")]),s._v(" 点击劫持")]),s._v(" "),t("h2",{attrs:{id:"url-跳转漏洞"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-跳转漏洞"}},[s._v("#")]),s._v(" URL 跳转漏洞")]),s._v(" "),t("h2",{attrs:{id:"sql-注入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-注入"}},[s._v("#")]),s._v(" SQL 注入")]),s._v(" "),t("h2",{attrs:{id:"os-命令注入攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#os-命令注入攻击"}},[s._v("#")]),s._v(" OS 命令注入攻击")])])}),[],!1,null,null,null);v.default=a.exports}}]);