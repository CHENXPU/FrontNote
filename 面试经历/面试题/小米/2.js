/**
 * 米兔从兔米那里了解到有一个无限长的数字序列: 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5 ...,
 * (已知此数列有一定规律，现将这些数字按不同数值堆叠，相同值的数字在同一层)。
 * 米兔想知道这个数字序列的第n个数所在的那一层之前的所有层里共有多少个数
 * 输入
 * n
 * 输出
 * 第n个数所在的那一层之前的所有层里共有多少个数
 * 样例输入
 * 6
 * 样例输出
 * 4
 */

// 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5
// 1 1 2 3 5 8
const N = 7,
  main = (n = N) => {
    if (n < 2) return 0;
    let arr = [1, 1],
      count = 2,
      a = 1,
      b = 1,
      c = 0;
    while (count < n) {
      c = a + b;
      count += c;
      arr.push(c);
      a = b;
      b = c;
    }
    arr.pop();
    return arr.reduce((a, b) => a + b);
  };
console.log(main());
